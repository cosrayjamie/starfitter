head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2013.11.08.23.04.43;	author thomas;	state Exp;
branches;
next	1.4;

1.4
date	2013.11.08.21.19.34;	author thomas;	state Exp;
branches;
next	1.3;

1.3
date	2013.11.08.21.12.34;	author thomas;	state Exp;
branches;
next	1.2;

1.2
date	2013.11.07.23.58.46;	author thomas;	state Exp;
branches;
next	1.1;

1.1
date	2013.10.03.18.58.25;	author thomas;	state Exp;
branches;
next	;


desc
@Initial revision 20131003
@


1.5
log
@Allowed processing of incomplete data file.
@
text
@#include <unistd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>

#define PMAX 32
#define NMAX 1024

int main( void);
static int compare_doubles (const double * x, const double * y);

int main( void)
{
  FILE *pp, *fp;
  char buffer[2048], command[2048], fname[2048];
  int site, mir, nparms[PMAX], iboot[NMAX];
  int site0[NMAX], mir0[NMAX], nparms0[NMAX];
  double phi[NMAX], theta[NMAX], psi[NMAX], mcd[NMAX], roc[NMAX], nstars[NMAX], chi2[NMAX];
  int wc;
  int nc;
  char *sname[3] = {"Middle Drum","Black Rock","Long Ridge"};
  int ip, NP = 0;

  // Identify parameter settings from data file

  pp = popen("cat mirror_geometry.nparm.dat | awk \'{print $3}\' | sort -g | uniq","r");
  
  while(fgets(buffer,12,pp)!=NULL)
    {
      if(sscanf(buffer," %d", &nparms[NP])==1)NP++;
      if(NP>=PMAX)break;
    }

  pclose(pp);
      
  // Now process statistics for each set of parameter fits

  for(ip=0;ip<NP;ip++) // Parameter mask
    {
      // First see if we already have a stats file for this parameter mask - if so, clear it out.

      sprintf(fname,"mirror_geometry.%dparm.stats.csv", nparms[ip]);
      if((fp=fopen(fname,"w"))==NULL){fprintf(stderr,"FATAL ERROR - unable to create \"%s\"\n", fname); exit(-1);}
      fclose(fp);

      // Process all sites and mirrors for this parameter mask setting

      for(site=0;site<3;site++)  // Site
	{
	  for(mir=0;mir<25;mir++) // Mirror
	    {
	      if((site==0)&&(mir==0))continue; // MD has no mirror #00
	      if((site>0)&&(mir>11))break; // BR & LR have only 12 mirrors
	      
	      // First see how many records we have for this site, mirror, and parameter mask

	      sprintf(command,"grep \"%d %d %d \" ~/starfitter/mirror_geometry.nparm.dat | grep -v \" %d %d %d \" | wc -l", site, mir, nparms[ip], site, mir, nparms[ip]);
	      
	      if((pp = popen(command,"r"))==NULL)exit(-1);
	      if(fgets(buffer,2047,pp) == NULL)exit(-1);
	      if(sscanf(buffer," %d", &wc)!=1)exit(-1);
	      pclose(pp);
	      if(wc<900)
		{
		  fprintf(stderr,"Too few records for %s m%.2d MASK = %X (%d)\n", sname[site], mir, nparms[ip], nparms[ip]);
		  continue;
		}
	      
	      // Read in results for this site, mirror, and parameter mask

	      sprintf(command,"grep \"%d %d %d \" ~/starfitter/mirror_geometry.nparm.dat | grep -v \" %d %d %d \"", site, mir, nparms[ip], site, mir, nparms[ip]);
	      if((pp = popen(command,"r"))==NULL)exit(-1);
	      nc = 0;
	      while(fgets(buffer,2047,pp) != NULL)
		{
		  if(sscanf(buffer,"%d %d %d %d %lf %lf %lf %lf %lf %lf %lf",
			    &site0[nc], &mir0[nc], &nparms0[nc], &iboot[nc],
			    &phi[nc], &theta[nc], &psi[nc], &mcd[nc], 
			    &roc[nc], &nstars[nc], &chi2[nc]) != 11)continue;
		  
		  if(site0[nc] != site)continue;
		  if(mir0[nc] != mir)continue;
		  if(nparms0[nc] != nparms[ip])continue;
		  nc++;
		}
	      pclose(pp);
		  
	      if(nc<900)exit(-1); // Must have at least 900 results

	      // Open output file for this parameter mask setting

	      sprintf(fname,"mirror_geometry.%dparm.stats.csv", nparms[ip]);

	      if((fp=fopen(fname,"a"))==NULL){fprintf(stderr,"FATAL ERROR - unable to open \"%s\"\n", fname); exit(-1);}

	      fprintf(fp,"%d %d ", site, mir);

	      // Qsort data, calculate median and 95% CL, and print

	      qsort(phi, nc, sizeof(double),  (__compar_fn_t)compare_doubles);
	      fprintf(fp,"%.4lf %.4lf ", phi[nc/2], 2.0e0*(phi[(3*nc)/4]-phi[nc/4])/1.349e0);

	      qsort(theta, nc, sizeof(double),  (__compar_fn_t)compare_doubles);
	      fprintf(fp,"%.4lf %.4lf ", theta[nc/2], 2.0e0*(theta[(3*nc)/4]-theta[nc/4])/1.349e0);

	      qsort(psi, nc, sizeof(double),  (__compar_fn_t)compare_doubles);
	      fprintf(fp,"%.4lf %.4lf ", psi[nc/2], 2.0e0*(psi[(3*nc)/4]-psi[nc/4])/1.349e0);

	      qsort(mcd, nc, sizeof(double),  (__compar_fn_t)compare_doubles);
	      fprintf(fp,"%.4lf %.4lf ", mcd[nc/2], 2.0e0*(mcd[(3*nc)/4]-mcd[nc/4])/1.349e0);

	      qsort(roc, nc, sizeof(double),  (__compar_fn_t)compare_doubles);
	      fprintf(fp,"%.4lf %.4lf ", roc[nc/2], 2.0e0*(roc[(3*nc)/4]-roc[nc/4])/1.349e0);

	      fprintf(fp,"\n");

	      fclose(fp);
	    }
	}
    }
  
  return 0;
}


static int compare_doubles (const double * x, const double * y)
{
  if ((*x) > (*y))
    return 1;
  else if ((*x) < (*y))
    return -1;

  return 0;
}
@


1.4
log
@Fixed some bugs.
@
text
@d43 3
a45 7
      sprintf(fname,"~/starfitter/mirror_geometry.%dparm.stats.csv", nparms[ip]);
 
      if(access(fname, F_OK ) == 0)
	{
	  if((fp=fopen(fname,"w"))==NULL)exit(-1);
	  fclose(fp);
	}
d63 1
d66 2
a67 2
		  fprintf(stderr,"ABORTED - too few records for %s m%.2d MASK = %X (%d)\n", sname[site], mir, nparms[ip], nparms[ip]);
		  exit(-1);
a68 1
	      pclose(pp);
d93 1
a93 1
	      sprintf(fname,"~/starfitter/mirror_geometry.%dparm.stats.csv", nparms[ip]);
d95 1
a95 1
	      if((fp=fopen(fname,"a"))==NULL)exit(-1);
@


1.3
log
@Modifed to handle parameter masks
@
text
@d17 1
a17 1
  int site, mir, nparms[PMAX], iboot;
d88 1
a88 1
		  if(nparms0[nc] != nparms)continue;
@


1.2
log
@Modified to handle bitmasked parameters.
@
text
@d1 1
d7 2
a8 4
typedef struct MIRROR
{
  double mdv, lqv, uqv;
}MIRROR;
d11 1
a11 2

MIRROR m[3][25][0x3F][12];
d15 6
a20 8
  FILE *pp, *fp, *cp;
  char buffer[2048], command[2048];
  int site, mir, nparms, iboot;
  int site0, mir0, nparms0;
  double phi, theta, psi, mcd, roc, nstars, chi2;
  int wc, k;
  int lq, uq, md;
  double lqv, uqv, mdv;
a21 1
  double v[12];
d23 15
d39 1
a39 1
  for(site=0;site<3;site++)
d41 5
a45 1
      for(mir=0;mir<25;mir++)
d47 3
a49 2
	  if((site==0)&&(mir==0))continue;
	  if((site>0)&&(mir>11))break;
d51 1
a51 1
	  cp = popen("cat mirror_geometry.nparm.dat | awk \'{print $3}\' | sort -g | uniq","r");
d53 3
a55 1
	  while(fgets(buffer,12,cp)!=NULL)
d57 4
a60 1
	      if(sscanf(buffer," %d", &nparms)!=1)continue;
d62 1
a62 1
	      sprintf(command,"grep \"%d %d %d \" ~/starfitter/mirror_geometry.nparm.dat | grep -v \" %d %d %d \" | wc -l", site, mir, nparms, site, mir, nparms);
d69 1
a69 1
		  fprintf(stderr,"ABORTED - too few records for %s m%.2d np = %d\n", sname[site], mir, nparms);
d74 6
a79 1
	      for(k=5;k<11;k++)
d81 11
a91 16
		  sprintf(command,"grep \"%d %d %d \" ~/starfitter/mirror_geometry.nparm.dat | grep -v \" %d %d %d \" | sort -g -k %d", site, mir, nparms, site, mir, nparms, k);
		  if((pp = popen(command,"r"))==NULL)exit(-1);
		  nc = 0;
		  while(fgets(buffer,2047,pp) != NULL)
		    {
		      if(sscanf(buffer,"%d %d %d %d %lf %lf %lf %lf %lf %lf %lf",
				&site0, &mir0, &nparms0, &iboot,
				&phi, &theta, &psi, &mcd, 
				&roc, &nstars, &chi2) != 11)continue;

		      if(site0 != site)continue;
		      if(mir0 != mir)continue;
		      if(nparms0 != nparms)continue;
		      nc++;
		    }
		  pclose(pp);
d93 7
a99 1
		  if(nc<900)exit(-1);
d101 1
a101 31
		  sprintf(command,"grep \"%d %d %d \" ~/starfitter/mirror_geometry.nparm.dat | grep -v \" %d %d %d \" | sort -g -k %d", site, mir, nparms, site, mir, nparms, k);
		  if((pp = popen(command,"r"))==NULL)exit(-1);
		  lq = nc/4;
		  uq = (3*nc)/4;
		  md = nc/2;
		  nc = 0;

		  while(fgets(buffer,2047,pp) != NULL)
		    {
		      if(sscanf(buffer,"%d %d %d %d %lf %lf %lf %lf %lf %lf %lf",
				&site0, &mir0, &nparms0, &iboot,
				&v[5], &v[6], &v[7], &v[8], 
				&v[9], &v[10], &v[11]) != 11)continue;

		      if(site0 != site)continue;
		      if(mir0 != mir)continue;
		      if(nparms0 != nparms)continue;

		      if(fabs(v[8]-2.991e0)<0.002e0)v[8] = 3.0e0;

		      nc++;

		      if(nc==lq)lqv = v[k];
		      if(nc==uq)uqv = v[k];
		      if(nc==md)mdv = v[k];
		    }
		  pclose(pp);

		  m[site][mir][nparms][k].mdv = mdv;
		  m[site][mir][nparms][k].uqv = uqv;
		  m[site][mir][nparms][k].lqv = lqv;
d103 20
a122 1
		}
a123 1
	  pclose(cp);
d127 2
a129 8
  for(site=0;site<3;site++)
    {
      for(mir=0;mir<25;mir++)
	{
	  if((site==0)&&(mir==0))continue;
	  if((site>0)&&(mir>11))break;

	  fprintf(stderr,"%d %d ", site, mir);
d131 6
a136 24
	  for(k=5;k<11;k++)
	    {
	      cp = popen("cat mirror_geometry.nparm.dat | awk \'{print $3}\' | sort -g | uniq","r");
	      
	      while(fgets(buffer,12,cp)!=NULL)
		{
		  if(sscanf(buffer," %d", &nparms)!=1)continue;
		  
		  if(k==5)
		    fprintf(stderr,"%.4lf %.4lf ", m[site][mir][nparms][k].mdv, 2.0e0*(m[site][mir][nparms][k].uqv-m[site][mir][nparms][k].lqv)/1.349e0);
		  else if(k==6)
		    fprintf(stderr,"%.4lf %.4lf ", m[site][mir][nparms][k].mdv, 2.0e0*(m[site][mir][nparms][k].uqv-m[site][mir][nparms][k].lqv)/1.349e0);
		  else if((k==7)&&(nparms==4))
		    fprintf(stderr,"%.4lf %.4lf ", m[site][mir][nparms][k].mdv, 2.0e0*(m[site][mir][nparms][k].uqv-m[site][mir][nparms][k].lqv)/1.349e0);
		  else if((k==8)&&(nparms==4))
		    fprintf(stderr,"%.4lf ", m[site][mir][nparms][k].mdv);
		  else if((k==9)&&(nparms>2))
		    fprintf(stderr,"%.4lf %.4lf ", m[site][mir][nparms][k].mdv, 2.0e0*(m[site][mir][nparms][k].uqv-m[site][mir][nparms][k].lqv)/1.349e0);
		}
	      pclose(cp);
	    }
	  fprintf(stderr,"\n");
	}
    }
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
MIRROR m[3][25][5][12];
d17 1
a17 1
  FILE *pp, *fp;
d35 4
a38 1
	  for(nparms=2;nparms<5;nparms++)
d40 2
d53 1
a53 1

d109 1
d125 3
a127 1
	      for(nparms=2;nparms<5;nparms++)
d129 2
d142 1
@
